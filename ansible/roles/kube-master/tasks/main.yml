---

- name: Ensure all k8s related groups are created
  when: master is defined
  group:
    name: "{{ item.name }}"
    gid: "{{ item.gid }}"
  with_items: "{{ k8s_groups }}"
  tags: [k8s-master]

- name: Ensure all k8s related users are created and added to the requiered groups
  when: master is defined
  user:
    name: "{{ item.name }}"
    uid: "{{ item.uid }}"
    group: "{{ item.groups }}"
    groups: "{{ item.groups }}"
  with_items: "{{ k8s_users }}"
  tags: [k8s-master]

- name: Ensure all needed directories are present
  when: master is defined
  file:
    state: directory
    path: "{{ item.path }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  with_items: "{{ directories }}"
  tags: [k8s-master]

- name: Ensure all needed binarys are present
  when: master is defined
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items: "{{ binarys }}"
  tags: [k8s-master]

- name: Ensure all k8s related certificates are present
  when: master is defined
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items: "{{ certs }}"
  tags: [k8s-master]

- name: Ensure all needed systemd unitfiles are present
  when: master is defined
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items: "{{ systemd_units }}"
  tags: [k8s-master]

- name: Ensure services have restarted
  when: master is defined
  systemd:
    state: restarted
    name: "{{ item.name }}"
    enabled: True
    daemon_reload: yes
  with_items: "{{ services }}"
  tags: [k8s-master]

- name: insert ~/.bashrc hacks for good times
  when: master is defined
  blockinfile:
    path: /root/.bashrc
    block: |
      source <(kubectl completion bash)

      alias k="kubectl"
      alias ll="ls -lah"

      function k-sys() {
        alias k="kubectl --namespace kube-system"
        printf "\n${red}kubectl --namespace kube-system active\n\n${reset}"
      }
      function k-pub() {
        alias k="kubectl --namespace kube-public"
        printf "\n${green}kubectl --namespace kube-public active\n\n${reset}"
      }
      function k-def() {
        alias k="kubectl"
        printf "\n${green}kubectl without namespace active\n\n${reset}"
      }
      function k-nodes() {
        for i in kube-{1..3}; do
          printf "${yellow}item: $i:${reset}\n"
          kubectl describe node $i.foo.io | grep -A4 "Allocated resources:"
        done
      }
  tags: [k8s-master]

# executing clusterroles.yml in files/ from to access the kubelets