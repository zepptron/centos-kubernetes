apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: example-local-pv
  annotations:
    "volume.alpha.kubernetes.io/node-affinity": '{
      "requiredDuringSchedulingIgnoredDuringExecution": {
        "nodeSelectorTerms": [
          { "matchExpressions": [
            { "key": "kubernetes.io/hostname",
              "operator": "In",
              "values": ["kube-3.foo.io"]
            }
          ]}
         ]}
        }'
spec:
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /mnt/disks/vol1

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: example-local-claim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: storetest
  labels:
    app: store
spec:
  selector:
    matchLabels:
      app: store
  template:
    metadata:
      labels:
        app: store
    spec:
      containers:
      - image: nginx
        name: task-pv-container
        ports:
        - containerPort: 80
          name: webport
        volumeMounts:
        - name: ex-store
          mountPath: /usr/share/nginx/html
      volumes:
      - name: ex-store
        persistentVolumeClaim:
          claimName: example-local-claim
      nodeSelector:
        shit: bitch

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: storetest
  namespace: default
  annotations:
    kubernetes.io/ingress.class: traefik
  labels:
    app: store
spec:
  rules:
  - host: store.example.com
    http:
      paths:
      - path: /
        backend:
          serviceName: storetest
          servicePort: 8080

---

kind: Service
apiVersion: v1
metadata:
  name: storetest
  namespace: default
spec:
  selector:
    app: store
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 80