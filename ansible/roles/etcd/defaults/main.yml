
role_name: "etcd"

# ETCD vars
etcd_version: "v3.3.2"
etcd_token: "9477af68bbee1b9ae037d6fd9e7efefd"
etcd_peer_port: "2380"
etcd_prot: "https"
etcd_client_port: "2379"
etcd_bin: "/bin"
etcd_path: "/tmp/etcd-{{ etcd_version }}-linux-amd64"
etcd_cert_dir: "/var/lib/etcd/certs"
etcd_config_dir: "/etc/etcd"
etcd_conf: "{{ etcd_config_dir }}/etcd.conf"
etcd_data_dir: "/var/lib/etcd/data"
etcd_backup_dir: "/var/lib/etcd/backup"

directories: [
  { path: "{{ etcd_config_dir }}",       owner: "{{ kube_user }}", group: "{{ kube_group }}", mode: 774 },
  { path: "{{ etcd_data_dir }}",         owner: "{{ kube_user }}", group: "{{ kube_group }}", mode: 774 },
  { path: "{{ etcd_backup_dir }}",       owner: "{{ kube_user }}", group: "{{ kube_group }}", mode: 774 },
  { path: "{{ etcd_cert_dir }}",         owner: "{{ kube_user }}", group: "{{ kube_group }}", mode: 770 }
]

binarys: [
  { path: "{{ etcd_path }}/etcd",    dest: "{{ etcd_bin }}/etcd",    owner: "{{ kube_user }}", group: "{{ kube_group }}", mode: 770 },
  { path: "{{ etcd_path }}/etcdctl", dest: "{{ etcd_bin }}/etcdctl", owner: "{{ kube_user }}", group: "{{ kube_group }}", mode: 770 }
]

configs: [
  { src: "roles/{{ role_name }}/templates/etcd.conf.j2",    dest: "{{ etcd_config_dir }}/etcd.conf",  owner: "{{ kube_user }}", group: "{{ kube_group }}",  mode: 664 },
  { src: "roles/{{ role_name }}/templates/etcd.service.j2", dest: "/etc/systemd/system/etcd.service", owner: "root",            group: "root",              mode: 664 }
]

certs: [
  { src: "certs/{{ env }}/k8s-certs/ca-key.pem",                       dest: "{{ etcd_cert_dir }}/ca-key.pem",                      owner: "{{ kube_user }}", group: "{{ kube_group }}", mode: 660 },
  { src: "certs/{{ env }}/k8s-certs/ca.pem",                           dest: "{{ etcd_cert_dir }}/ca.pem",                          owner: "{{ kube_user }}", group: "{{ kube_group }}", mode: 660 },
  { src: "certs/{{ env }}/k8s-certs/etcd-client-key.pem",              dest: "{{ etcd_cert_dir }}/etcd-client-key.pem",             owner: "{{ kube_user }}", group: "{{ kube_group }}", mode: 660 },
  { src: "certs/{{ env }}/k8s-certs/etcd-client.pem",                  dest: "{{ etcd_cert_dir }}/etcd-client.pem",                 owner: "{{ kube_user }}", group: "{{ kube_group }}", mode: 660 },
  { src: "certs/{{ env }}/k8s-certs/peer-{{ etcd_name }}-key.pem",     dest: "{{ etcd_cert_dir }}/peer-{{ etcd_name }}-key.pem",    owner: "{{ kube_user }}", group: "{{ kube_group }}", mode: 660 },
  { src: "certs/{{ env }}/k8s-certs/peer-{{ etcd_name }}.pem",         dest: "{{ etcd_cert_dir }}/peer-{{ etcd_name }}.pem",        owner: "{{ kube_user }}", group: "{{ kube_group }}", mode: 660 },
  { src: "certs/{{ env }}/k8s-certs/server-{{ etcd_name }}-key.pem",   dest: "{{ etcd_cert_dir }}/server-{{ etcd_name }}-key.pem",  owner: "{{ kube_user }}", group: "{{ kube_group }}", mode: 660 },
  { src: "certs/{{ env }}/k8s-certs/server-{{ etcd_name }}.pem",       dest: "{{ etcd_cert_dir }}/server-{{ etcd_name }}.pem",      owner: "{{ kube_user }}", group: "{{ kube_group }}", mode: 660 }
]

env_vars: [
  { dest: "/root/.bashrc",                line: "export ETCDCTL_API=3" },
  { dest: "/root/.bashrc",                line: "export ETCDCTL_CACERT={{ etcd_cert_dir }}/ca.pem" },
  { dest: "/root/.bashrc",                line: "export ETCDCTL_CERT={{ etcd_cert_dir }}/etcd-client.pem" },
  { dest: "/root/.bashrc",                line: "export ETCDCTL_KEY={{ etcd_cert_dir }}/etcd-client-key.pem" },
  { dest: "/root/.bashrc",                line: "export ETCDCTL_ENDPOINTS={% for node in groups['etcd'] %}{{ etcd_prot }}://{{ node }}:{{ etcd_client_port }}{% if not loop.last %},{% endif %}{% endfor %}" },
  { dest: "/home/{{ app_user }}/.bashrc", line: "export ETCDCTL_API=3" },
  { dest: "/home/{{ app_user }}/.bashrc", line: "export ETCDCTL_CACERT={{ etcd_cert_dir }}/ca.pem" },
  { dest: "/home/{{ app_user }}/.bashrc", line: "export ETCDCTL_CERT={{ etcd_cert_dir }}/etcd-client.pem" },
  { dest: "/home/{{ app_user }}/.bashrc", line: "export ETCDCTL_KEY={{ etcd_cert_dir }}/etcd-client-key.pem" },
  { dest: "/home/{{ app_user }}/.bashrc", line: "export ETCDCTL_ENDPOINTS={% for node in groups['etcd'] %}{{ etcd_prot }}://{{ node }}:{{ etcd_client_port }}{% if not loop.last %},{% endif %}{% endfor %}" }
]